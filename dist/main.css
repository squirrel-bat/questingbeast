@font-face {
  font-family: "AmaticSC";
  src: url("AmaticSC-Regular.ttf");
}
@font-face {
  font-family: "CrimsonText";
  src: url("CrimsonText-Regular.ttf");
}
:root {
  --green: rgb(0, 115, 62);
  --darkgreen: rgb(11, 77, 44);
  --lightgreen: rgb(196, 211, 202);
  --red: rgb(185, 0, 0);
  --darkred: rgb(165, 0, 0);
  --darkpurple: #343242;
  --purple: #4b485f;
  --lightpurple: #634496;
  --lightpurple-25: #63449640;
  --bg--grey: rgba(216, 220, 223);
  --progress-bar-height: 7rem;
}
* {
  box-sizing: border-box;
}
button {
  user-select: none !important;
}
.lightgreen {
  color: var(--lightgreen);
}
.bg-lightgreen {
  background-color: var(--lightgreen);
}
.green {
  color: var(--green);
}
.bg-green {
  background-color: var(--green) !important;
}
.red {
  color: var(--red);
}
.bg-red {
  background-color: var(--darkred) !important;
}
@keyframes questingbeast {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}
.disabled {
  display: none !important;
}
html {
  font-size: 16px;
}
@media screen and (max-device-width: 480px) {
  html {
    font-size: 8px;
  }
  h1 {
    font-size: 4.5rem !important;
  }
}
body {
  min-height: 100vh;
  margin: 0;
  padding: 0.5rem;
  font-family: "AmaticSC", sans-serif;
  font-size: 2.5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 3rem;
}
img {
  max-width: 100%;
}
#back_menu {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
}
.btn-sm {
  font-size: 2rem !important;
  padding: 0.25rem 1rem !important;
  font-weight: bold !important;
}
.btn-secondary {
  background: none !important;
  box-shadow: none !important;
  text-shadow: none !important;
  color: var(--lightpurple) !important;
  border: none !important;
}
.btn-secondary:hover {
  background: var(--lightpurple-25) !important;
}
main {
  max-width: 1260px;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 3rem;
  gap: 3rem;
}
.flex-row {
  display: flex;
  align-items: center;
  gap: 2rem;
}
nav span {
  font-weight: bold;
}
h1 {
  font-size: 5rem;
  text-transform: uppercase;
  text-align: center;
}
.m-0 {
  margin: 0;
}
.qb-word {
  display: inline-block;
  animation: questingbeast 3s infinite;
}
article {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
article > *:not(.hidden, figure) {
  opacity: 1;
  animation: fade-in 0.3s ease-in-out;
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
section {
  width: 100%;
}
figure {
  position: relative;
  border-radius: 2rem;
  overflow: hidden;
  box-shadow: 5px 10px 10px rgba(0, 20, 5, 0.5);
  margin: 0 auto;
  animation: pop 0.5s ease-in-out;
}
@keyframes pop {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  40% {
    opacity: 1;
    transform: translateX(-5%);
  }
  70% {
    transform: translateX(2.5%);
  }
  100% {
    transform: translateX(0);
  }
}
figure img {
  vertical-align: top;
}
.center {
  align-self: center;
}
.text-center {
  text-align: center;
}
.italic {
  font-style: italic;
}
.btn-default {
  cursor: pointer;
  font: inherit;
  font-size: 3rem;
  color: white;
  padding: 0.5rem 1.5rem;
  border-radius: 0.5rem;
  text-shadow: 0.125rem 0.125rem 0 black;
  border: 0.125rem solid rgba(0, 0, 0, 0.5);
  background: var(--lightpurple);
  box-shadow: 0 0.5rem 0 var(--darkpurple);
  transition: all 0.15s ease-out;
}

.btn-default:hover {
  transform: translateY(0.3rem);
  box-shadow: 0 0.2rem 0 var(--darkpurple);
}
.btn-default:active {
  transform: translateY(0.5rem);
  opacity: 0.8;
  box-shadow: 0 0 0 var(--darkpurple);
}
#details {
  margin: 0 auto;
  transform-origin: top center;
  transition: all 0.3s ease;
  display: grid;
  grid-template-columns: 1fr 1fr;
}
.hidden {
  opacity: 0;
}
.display-none {
  display: none !important;
}
.column {
  padding: 4rem 2rem;
  font-weight: bold;
}
#details h2 {
  margin-top: 0;
}
#details ol {
  padding-inline-start: 2.5rem;
}
#details li {
  padding: 0 0.5rem 1rem;
}
#quiz:not(.display-none) {
  display: flex;
  gap: 3rem;
}
#question {
  position: relative;
  font-family: CrimsonText, serif;
  font-size: 1.8rem;
  line-height: 1.8rem;
  background: var(--bg--grey);
  border: 0.25rem solid var(--green);
  border-top-width: 0.1875rem;
  border-radius: 3px;
  box-shadow: inset -2px 3px 3px rgba(0, 0, 0, 0.33),
    inset 2px -3px 3px rgba(255, 255, 255, 0.33);
  padding: 14px 10px;
  min-height: 17.875rem;
  width: 36.375rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  overflow: clip;
  overflow-clip-margin: 0.25rem;
}
#question::before,
#question::after {
  content: "[...]";
  color: #aaa;
}
#stamp {
  position: absolute;
  bottom: -2.8125rem;
  left: 50%;
  transform: translate(-50%, 50%);
  width: 7.5rem;
  height: 7.5rem;
  border: 0.25rem solid var(--green);
  border-radius: 999px;
  background: var(--lightgreen);
}

#power-toughness {
  position: absolute;
  bottom: -3.75rem;
  right: -1.25rem;
  width: 7.5rem;
  height: 7.5rem;
  border: 0.25rem solid var(--green);
  border-radius: 999px;
  background: var(--lightgreen);
}

#power-toughness::before {
  content: "";
  position: absolute;
  top: -0.375rem;
  left: 0.3125rem;
  height: 1.875rem;
  width: 5.6875rem;
  border: 0.25rem solid var(--green);
  border-top: none;
  border-left: none;
  background: var(--bg--grey);
  box-shadow: inset -4px -1px 3px -2px rgba(0, 0, 0, 0.33);
}

#result .text {
  font-weight: bold;
  user-select: none !important;
  animation: correct 0.4s ease-in-out;
}

@keyframes correct {
  0% {
    transform: scale(1) translateY(-100%);
  }
  50% {
    transform: scale(1.01, 0.5);
  }
  70% {
    transform: scale(0.99, 1.1);
  }
  90% {
    transform: scale(1.01, 0.9);
  }
}

#summary {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem;
}

#summary-bar {
  position: relative;
  max-width: 100%;
  width: 100%;
  height: calc(var(--progress-bar-height) + 1rem);
  color: white;
  font-weight: bold;
  text-align: left;
  border-radius: 0.5rem;
  text-shadow: 0.125rem 0.125rem 0 black;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.25),
    0 1px rgba(255, 255, 255, 0.08);
  background: rgba(0, 0, 0, 0.1);
  overflow: visible;
}

#summary-progress {
  position: absolute;
  top: 0.25rem;
  left: 0.5rem;
  height: calc(var(--progress-bar-height));
  width: calc(0% - 1rem);
  transform-origin: left center;
  border-radius: 0.25rem;
  background-color: var(--green);
  box-shadow: 0 0.375rem 0.375rem -0.125rem var(--darkgreen), 0 0.375rem #333;
  transition: width 3s ease-out;
}

#summary-progress::after {
  content: url("questing-head.png");
  position: absolute;
  top: 50%;
  right: 0;
  filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.16))
    drop-shadow(0 4px 3px rgba(0, 0, 0, 0.23));
  --transform: translate(44%, -50px);
  animation: questinghead 2s ease infinite;
}
@keyframes questinghead {
  0%,
  100% {
    transform: var(--transform) rotateZ(8deg);
  }
  50% {
    transform: var(--transform) rotateZ(-5deg);
  }
}
.winner #summary-progress::after,
.winner #summary-label {
  animation: winner 1s ease-in-out infinite;
}
@keyframes winner {
  0%,
  50%,
  100% {
    transform: var(--transform) scale(0.9);
  }
  20%,
  70% {
    transform: var(--transform) scale(1.2);
  }
  0%,
  100% {
    transform: var(--transform) rotate3d(0, 1, 0.25, 20deg);
  }
  50% {
    transform: var(--transform) rotate3d(0, 1, 0.25, -25deg);
  }
}

#summary-label {
  position: absolute;
  top: 0.25rem;
  left: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3rem;
  height: var(--progress-bar-height);
  --transform: translateX(-50%);
  transform: var(--transform);
  transition: opacity 1s ease;
}

html.party::after {
  content: "";
  height: 100%;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0.5;
  pointer-events: none;
  animation: party 0.75s linear infinite;
}
@keyframes party {
  0%,
  100% {
    background: #f00;
  }
  33% {
    background: #0f0;
  }
  66% {
    background: #00f;
  }
}

#footer {
  font-size: 1.5rem;
  align-self: stretch;
}
a {
  text-decoration: none;
  color: var(--lightpurple);
}
a:hover {
  text-decoration: underline;
}
